(function(){function b(b){if(b[0].tokens)return b;for(var a=[],e=0;e<b.length;e++)a.push(adf.mf.internal.el.parser.parse(b[e]));return a}amx.containsELExpressions=function(b){return b?b.getExpression?!0:0<amx.getElsFromString(b).length:!1};amx.getElsFromString=function(b){var a=[];if(null!=b)for(var e=/[#,$]{.*?}/g,d=e.exec(b);null!=d;)0>a.indexOf(d[0])&&a.push(d[0]),d=e.exec(b);return a};adf.mf.internal.amx.evaluateExpression=function(b){b=adf.mf.el.getLocalValue(b);return null!=b&&!0===b[".null"]?
null:b};amx.getElValue=function(c,a){return new adf.mf.internal.BasePromise(function(e,d){if(adf.mf.environment.profile.dtMode)e([c,[{value:c}]]);else{var g=adf.mf.internal.util.is_array(c)?c:[c],g=b(g),h=adf.mf.internal.perf.startMonitorCall("AMX get EL value",adf.mf.log.level.FINER,"amx:getElValue"),k=function(a){void 0===a&&(a=[]);for(var b=0,c=[],d=0;d<g.length;++d){var e=g[d],h=null,k=!0;if(b<a.length&&a[b].name==e.getExpression()){var m=a[b];null!==m&&void 0===m[adf.mf.internal.api.constants.EXCEPTION_FLAG_PROPERTY]&&
(k=!1,h=m.value,++b)}if(k)try{h=adf.mf.el.getLocalValue(e)}catch(n){}void 0===h&&(h={".null":!0});c.push({name:e.getExpression(),expression:e,value:h})}return c},m=function(a,b){var c;try{c=k(b)}finally{h.stop()}e([a,c])},n=function(a,b){var c;try{adf.mf.log.logInfoResource("AMXInfoBundle",adf.mf.log.level.SEVERE,"getElValue","MSG_GETVALUE_FAILED"),adf.mf.log.Framework.isLoggable(adf.mf.log.level.FINE)&&adf.mf.log.Framework.logp(adf.mf.log.level.FINE,"amx","getElValue","Request that failed: "+a+" exception: "+
b),c=k()}finally{h.stop()}e([a,c])};try{adf.mf.el.getValue(g,m,n,a)}catch(t){adf.mf.log.logInfoResource("AMXInfoBundle",adf.mf.log.level.SEVERE,"getElValue","MSG_GETVALUE_EXCEPTION"),adf.mf.log.Framework.isLoggable(adf.mf.log.level.FINE)&&adf.mf.log.Framework.logp(adf.mf.log.level.FINE,"amx","getElValue","EL strings: "+adf.mf.util.stringify(g)+" error: "+t),n(g,t)}}})};amx.setElValue=function(b){return new adf.mf.internal.BasePromise(function(a,e){if(adf.mf.environment.profile.dtMode)a();else{var d=
adf.mf.internal.perf.startMonitorCall("AMX set EL value",adf.mf.log.level.FINER,"amx:setElValue");try{adf.mf.el.setValue(b,function(b,c){d.stop();a([b,c])},function(a,g){d.stop();adf.mf.log.logInfoResource("AMXInfoBundle",adf.mf.log.level.SEVERE,"setElValue","MSG_SETVALUE_FAILED");adf.mf.log.Framework.isLoggable(adf.mf.log.level.FINE)&&adf.mf.log.Framework.logp(adf.mf.log.level.FINE,"amx","setElValue","Request arguments: "+adf.mf.util.stringify(b)+" exception: "+g);e([a,g])})}catch(g){d.stop(),adf.mf.log.logInfoResource("AMXInfoBundle",
adf.mf.log.level.SEVERE,"setElValue","MSG_SETVALUE_EXCEPTION"),adf.mf.log.Framework.isLoggable(adf.mf.log.level.FINE)&&adf.mf.log.Framework.logp(adf.mf.log.level.FINE,"amx","setElValue","Name: "+b.name+" error: "+g),a()}}})};amx.invokeEl=function(b,a,e,d){b&&b.getExpression&&(b=b.getExpression());adf.mf.log.logInfoResource("AMXInfoBundle",adf.mf.log.level.SEVERE,"amx.invokeEl","MSG_DEPRECATED","amx.invokeEl","adf.mf.api.amx.invokeEl");return new adf.mf.internal.BasePromise(function(e,h){try{b&&!adf.mf.environment.profile.dtMode?
adf.mf.environment.profile.mockData?(adf.mf.log.logInfoResource("AMXInfoBundle",adf.mf.log.level.INFO,"invokeEl","MSG_AMX_DO_NOT_CALL_ADFMF_EL_INVOKE"),adf.mf.log.Framework.isLoggable(adf.mf.log.level.FINE)&&adf.mf.log.Framework.logp(adf.mf.log.level.FINE,"amx","invokeEl","Deprecated call with expression: "+b),e()):adf.mf.el.invoke(b,a,"void",d,function(a,b){e(b)},function(a,b){h(b)}):e()}catch(k){adf.mf.log.logInfoResource("AMXInfoBundle",adf.mf.log.level.SEVERE,"invokeEl","MSG_INVOKEEL_EXCEPTION"),
adf.mf.log.Framework.isLoggable(adf.mf.log.level.FINE)&&adf.mf.log.Framework.logp(adf.mf.log.level.FINE,"amx","invokeEl","Call failed. Expression: "+b+" error: "+k),e()}})};adf.mf.api.amx.invokeEl=function(b,a,e,d,g,h){try{b&&b.getExpression&&(b=b.getExpression()),b&&!adf.mf.environment.profile.dtMode?adf.mf.environment.profile.mockData?(adf.mf.log.logInfoResource("AMXInfoBundle",adf.mf.log.level.INFO,"invokeEl","MSG_AMX_DO_NOT_CALL_ADFMF_EL_INVOKE"),adf.mf.log.Framework.isLoggable(adf.mf.log.level.FINE)&&
adf.mf.log.Framework.logp(adf.mf.log.level.FINE,"adf.mf.api.amx","invokeEl","invokeEl called in mock mode with expression: "+b),g&&g()):(null==e&&(e="void"),adf.mf.el.invoke(b,a,e,d,g,h)):g&&g()}catch(k){adf.mf.log.logInfoResource("AMXInfoBundle",adf.mf.log.level.SEVERE,"invokeEl","MSG_INVOKEEL_EXCEPTION"),adf.mf.log.Framework.isLoggable(adf.mf.log.level.FINE)&&adf.mf.log.Framework.logp(adf.mf.log.level.FINE,"adf.mf.api.amx","invokeEl","Call failed. Expression: "+b+" error: "+k),h&&h()}}})();